// –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
export const VACANCIES = [
  {
    id: 'frontend',
    title: 'Frontend Developer',
    description: 'React, Vue, JavaScript, TypeScript',
    emoji: ''
  },
  {
    id: 'backend',
    title: 'Backend Developer',
    description: 'Node.js, Python, PHP, Java',
    emoji: '‚öô'
  },
  {
    id: 'fullstack',
    title: 'Fullstack Developer',
    description: 'Frontend + Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    emoji: ''
  },
  {
    id: 'mobile',
    title: 'Mobile Developer',
    description: 'React Native, Flutter, iOS, Android',
    emoji: ''
  },
  {
    id: 'devops',
    title: 'DevOps Engineer',
    description: 'Docker, Kubernetes, AWS, CI/CD',
    emoji: ''
  },
  {
    id: 'designer',
    title: 'UI/UX Designer',
    description: 'Figma, Adobe XD, Sketch, Prototyping',
    emoji: 'ÔøΩ'
  },
  {
    id: 'qa',
    title: 'QA Engineer',
    description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, Selenium',
    emoji: 'üß™'
  },
  {
    id: 'other',
    title: '–î—Ä—É–≥–∞—è –ø–æ–∑–∏—Ü–∏—è',
    description: '–ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é? –í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–æ',
    emoji: 'ÔøΩ'
  }
];

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏
export function createVacancyKeyboard() {
  const keyboard = [];
  
  // –°–æ–∑–¥–∞–µ–º —Ä—è–¥—ã –ø–æ 2 –∫–Ω–æ–ø–∫–∏
  for (let i = 0; i < VACANCIES.length; i += 2) {
    const row = [];
    
    // –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Ä—è–¥—É
    row.push({
      text: `${VACANCIES[i].emoji} ${VACANCIES[i].title}`,
      callback_data: `vacancy_${VACANCIES[i].id}`
    });
    
    // –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (i + 1 < VACANCIES.length) {
      row.push({
        text: `${VACANCIES[i + 1].emoji} ${VACANCIES[i + 1].title}`,
        callback_data: `vacancy_${VACANCIES[i + 1].id}`
      });
    }
    
    keyboard.push(row);
  }
  
  return {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ ID
export function getVacancyById(id) {
  return VACANCIES.find(vacancy => vacancy.id === id);
}
