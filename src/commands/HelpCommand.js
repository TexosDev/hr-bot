import { BaseCommand } from './BaseCommand.js';
import { CONFIG } from '../config/constants.js';

export class HelpCommand extends BaseCommand {
  constructor() {
    super('help');
  }

  async execute(ctx) {
    try {
      const webAppUrl = process.env.WEBAPP_URL || `http://localhost:3001/webapp/index.html`;
      
      await ctx.reply(CONFIG.MESSAGES.HELP, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üöÄ –ù–∞—á–∞—Ç—å', callback_data: 'back_to_main' }],
            [{ text: 'üìã –í–∞–∫–∞–Ω—Å–∏–∏', callback_data: 'show_vacancies' }],
            [
              { text: 'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', web_app: { url: webAppUrl } }
            ],
            [
              { text: 'üìä –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data: 'my_subscriptions' }
            ]
          ]
        }
      });
    } catch (error) {
      await this.handleError(ctx, error, '–ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏');
    }
  }

  getDescription() {
    return '–ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º';
  }
}
