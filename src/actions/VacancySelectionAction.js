import { BaseAction } from './BaseAction.js';
import { getVacanciesFromSupabase } from '../services/supabase/supabaseVacancies.js';
import { getVacancyById, createVacancyDetailKeyboard, createAfterSelectionKeyboard } from '../services/vacancies.js';
import { setSelectedVacancy } from '../utils/session.js';

/**
 * –î–µ–π—Å—Ç–≤–∏–µ –≤—ã–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID, DRY, KISS
 */
export class VacancySelectionAction extends BaseAction {
  constructor() {
    super(/^select_vacancy_/);
  }

  async execute(ctx) {
    const vacancyId = this.extractParams(ctx.callbackQuery.data, 'select_vacancy_');
    
    try {
      const vacancies = await getVacanciesFromSupabase();
      const vacancy = getVacancyById(vacancies, vacancyId);
      
      if (!vacancy) {
        await this.handleVacancyNotFound(ctx);
        return;
      }

      await this.handleVacancySelection(ctx, vacancy);
    } catch (error) {
      await this.handleError(ctx, error, '–≤—ã–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
   * KISS: –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞
   */
  async handleVacancySelection(ctx, vacancy) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é –≤ —Å–µ—Å—Å–∏–∏
    setSelectedVacancy(ctx.from.id, vacancy);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
    const message = `‚úÖ **–í–∞–∫–∞–Ω—Å–∏—è –≤—ã–±—Ä–∞–Ω–∞!**\n\n` +
                   `üìã **${vacancy.emoji} ${vacancy.title}**\n\n` +
                   `üìù ${vacancy.description}\n\n` +
                   `üìä –£—Ä–æ–≤–µ–Ω—å: ${vacancy.level || '–õ—é–±–æ–π'}\n` +
                   `üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: ${vacancy.salary || '–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏'}\n\n` +
                   `–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞ (PDF, DOC, DOCX, TXT).`;
    
    const keyboard = createAfterSelectionKeyboard(vacancy);
    
    await ctx.editMessageText(message, {
      parse_mode: 'Markdown',
      reply_markup: keyboard.reply_markup
    });
    
    await this.answerCallback(ctx, `–í—ã–±—Ä–∞–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è: ${vacancy.title}`);
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤–∞–∫–∞–Ω—Å–∏–∏
   * DRY: –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ª–æ–≥–∏–∫–∞
   */
  createVacancyMessage(vacancy) {
    return `üìã **${vacancy.emoji} ${vacancy.title}**\n\n` +
           `üìù ${vacancy.description}\n\n` +
           `üìä –£—Ä–æ–≤–µ–Ω—å: ${vacancy.level || '–õ—é–±–æ–π'}\n` +
           `üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: ${vacancy.salary || '–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏'}\n\n` +
           `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ –≤–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
   * DRY: –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ª–æ–≥–∏–∫–∞
   */
  async handleVacancyNotFound(ctx) {
    await this.answerCallback(ctx, '‚ùå –í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
}
