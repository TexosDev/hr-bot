import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå SUPABASE_URL –∏ SUPABASE_ANON_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env');
  console.error('üí° –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:');
  console.error('   SUPABASE_URL:', supabaseUrl ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω');
  console.error('   SUPABASE_ANON_KEY:', supabaseKey ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω');
  process.exit(1);
}

export const supabase = createClient(supabaseUrl, supabaseKey);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
export async function testSupabaseConnection() {
  try {
    const { data, error } = await supabase.from('vacancies').select('count').limit(1);
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
      return false;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
    return false;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export default supabase;
