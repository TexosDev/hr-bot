import 'dotenv/config';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
const SERVICE_MODE = process.env.SERVICE_MODE || 'bot';

console.log(`üöÄ –†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞: ${SERVICE_MODE.toUpperCase()}`);

// WEBAPP MODE - —Ç–æ–ª—å–∫–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ñ–æ—Ä–º—ã –ø–æ–¥–ø–∏—Å–∫–∏
if (SERVICE_MODE === 'webapp') {
  console.log('üåê –ó–∞–ø—É—Å–∫ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
  
  const { webhookService } = await import('./services/webhook.js');
  
  await webhookService.start();
  console.log('‚úÖ WebApp —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
  console.log(`üì± WebApp –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ Public URL Railway`);
  console.log(`‚ù§Ô∏è  Health check: /health`);
  
  process.on('SIGINT', () => {
    console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
    webhookService.stop();
    process.exit(0);
  });
  
  process.on('SIGTERM', () => {
    console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
    webhookService.stop();
    process.exit(0);
  });
  
} else {
  // BOT MODE - Telegram –±–æ—Ç + —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
  console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
  
  const { Telegraf } = await import('telegraf');
  const { google } = await import('googleapis');
  const { createDriveService } = await import('./services/googleDrive.js');
  const { createSheetsService } = await import('./services/googleSheets.js');
  const { handleDocument } = await import('./handlers/document.js');
  const { handleText } = await import('./handlers/text.js');
  const { CONFIG } = await import('./config/constants.js');
  const { CommandManager } = await import('./commands/CommandManager.js');
  const { ActionManager } = await import('./actions/ActionManager.js');
  const { syncScheduler } = await import('./services/scheduler.js');
  const { telegramNotifications } = await import('./services/telegram-notifications.js');

  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  if (!process.env.BOT_TOKEN) {
    console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
  }
  if (!process.env.ADMIN_CHAT_ID) {
    console.error('‚ùå ADMIN_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
  }
  console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  
  const bot = new Telegraf(process.env.BOT_TOKEN);
  
  bot.use((ctx, next) => {
    if (!ctx.session) {
      ctx.session = {};
    }
    return next();
  });
  
  const auth = new google.auth.JWT(
    process.env.GOOGLE_SERVICE_EMAIL,
    null,
    process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
    ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/spreadsheets']
  );

  const driveService = createDriveService(auth);
  const sheetsService = createSheetsService(auth);
  const commandManager = new CommandManager();
  const actionManager = new ActionManager();
  
  // Google Sheets –∏ Drive –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const sheetId = process.env.GOOGLE_SHEETS_ID;
  const folderId = process.env.GOOGLE_DRIVE_FOLDER_ID;
  
  commandManager.registerAll(bot);
  actionManager.registerAll(bot);
  
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  bot.on('document', (ctx) => handleDocument(ctx, driveService, sheetsService, sheetId, folderId));
  bot.on('text', handleText);
  bot.catch((err, ctx) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  });
  
  // –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
  async function startBot() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...');
    telegramNotifications.initialize();
    syncScheduler.start();

    console.log('üì± –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (polling —Ä–µ–∂–∏–º)...');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É 409 (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ –¥–µ–ø–ª–æ–µ Railway)
    try {
      await bot.launch();
      console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
    } catch (error) {
      if (error.response?.error_code === 409) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ 409: –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
        console.warn('üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö Railway, –∂–¥—ë–º 5 —Å–µ–∫—É–Ω–¥...');
        // –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
        await new Promise(resolve => setTimeout(resolve, 5000));
        await bot.launch();
        console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (–≤—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞)');
      } else {
        throw error;
      }
    }

    console.log('üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    telegramNotifications.notifyBotStart();
  }

  // –ó–∞–ø—É—Å–∫
  startBot().catch(err => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
    process.exit(1);
  });
  
  process.once('SIGINT', () => {
    console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    syncScheduler.stop();
    bot.stop('SIGINT');
  });

  process.once('SIGTERM', () => {
    console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    syncScheduler.stop();
    bot.stop('SIGTERM');
  });
}
