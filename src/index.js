import 'dotenv/config';
import { Telegraf } from 'telegraf';
import { google } from 'googleapis';
import { createDriveService } from './services/googleDrive.js';
import { createSheetsService } from './services/googleSheets.js';
import { handleDocument } from './handlers/document.js';
import { handleText } from './handlers/text.js';
import { CONFIG } from './config/constants.js';
import { CommandManager } from './commands/CommandManager.js';
import { ActionManager } from './actions/ActionManager.js';
import { syncScheduler } from './services/scheduler.js';
import { telegramNotifications } from './services/telegram-notifications.js';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
if (!process.env.BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  process.exit(1);
}
if (!process.env.ADMIN_CHAT_ID) {
  console.error('‚ùå ADMIN_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  process.exit(1);
}
console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
const bot = new Telegraf(process.env.BOT_TOKEN);
bot.use((ctx, next) => {
  if (!ctx.session) {
    ctx.session = {};
  }
  return next();
});
const auth = new google.auth.JWT(
  process.env.GOOGLE_SERVICE_EMAIL,
  null,
  process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
  ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/spreadsheets']
);

const driveService = createDriveService(auth);
const sheetsService = createSheetsService(auth);
const commandManager = new CommandManager();
const actionManager = new ActionManager();
commandManager.registerAll(bot);
actionManager.registerAll(bot);
bot.on('document', handleDocument);
bot.on('text', handleText);
bot.catch((err, ctx) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
  ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});
// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async function startBot() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...');
  telegramNotifications.initialize();
  syncScheduler.start();

  // –ß–ò–°–¢–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: —Ç–æ–ª—å–∫–æ Telegram –±–æ—Ç
  // HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è WebApp —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å (scripts/start-webapp-production.js)
  
  console.log('üì± –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (polling —Ä–µ–∂–∏–º)...');
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É 409 (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø—Ä–∏ –¥–µ–ø–ª–æ–µ)
  try {
    await bot.launch();
    console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
  } catch (error) {
    if (error.response?.error_code === 409) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ 409: –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
      console.warn('üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö Railway, –∂–¥—ë–º...');
      // –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
      await new Promise(resolve => setTimeout(resolve, 5000));
      await bot.launch();
      console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (–≤—Ç–æ—Ä–æ–π –ø–æ–ø—ã—Ç–∫–∞)');
    } else {
      throw error;
    }
  }

  console.log('üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
  telegramNotifications.notifyBotStart();
}

// –ó–∞–ø—É—Å–∫
startBot().catch(err => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
  process.exit(1);
});
process.once('SIGINT', () => {
  console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
  syncScheduler.stop();
  bot.stop('SIGINT');
});

process.once('SIGTERM', () => {
  console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
  syncScheduler.stop();
  bot.stop('SIGTERM');
});
