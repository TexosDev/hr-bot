import express from 'express';
import { saveUserPreferences } from '../services/supabase/supabaseUserPreferences.js';
import { telegramWebAppAuth } from '../middleware/telegramAuth.js';
import { rateLimiter, validateAndSanitize } from '../middleware/rateLimiter.js';

const router = express.Router();

/**
 * API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø—Ä–æ—Å–æ–≤ –∏–∑ WebApp
 * –ó–ê–©–ò–¢–ê: Telegram auth, rate limiting, input validation
 */

/**
 * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ –∏–∑ WebApp
 * POST /api/survey/complete
 */
router.post('/complete',
    rateLimiter({ windowMs: 60000, max: 3 }), // –ú–∞–∫—Å 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–∏–Ω—É—Ç—É
    validateAndSanitize, // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    telegramWebAppAuth, // –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –ø–æ–¥–ø–∏—Å–∏
    async (req, res) => {
    try {
        const {
            firstName, lastName, email, telegram,
            category, skills, experienceYears, workFormat,
            geoPreference, salaryExpectation, profileLink,
            hasResumeFile,
            telegramUserId // ‚úÖ –ù–û–í–û–ï: —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –∏–∑ WebApp API
        } = req.body;

        // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ù–µ –ª–æ–≥–∏—Ä—É–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (email, telegram)
        console.log('üìù –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', telegramUserId || 'anonymous');

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (!firstName || !lastName || !email || !telegram || !category || !skills || !experienceYears || !workFormat) {
            return res.status(400).json({
                success: false,
                error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'
            });
        }

        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID
        const userId = telegramUserId || -Math.abs(Date.now());
        
        console.log(`üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º User ID: ${userId} ${telegramUserId ? '(—Ä–µ–∞–ª—å–Ω—ã–π Telegram ID)' : '(–≤—Ä–µ–º–µ–Ω–Ω—ã–π ID)'}`);
        
        const user = {
            id: userId,
            first_name: firstName,
            last_name: lastName,
            username: telegram.replace('@', ''),
            telegram_username: telegram
        };

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö WebApp
        const preferences = {
            specialization: [category], // –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            technologies: skills, // –ù–∞–≤—ã–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
            experience: [experienceYears], // –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
            work_format: [workFormat], // –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
            location: geoPreference || '', // –ñ–µ–ª–∞–µ–º–æ–µ GEO
            salary_range: salaryExpectation || '', // –û–∂–∏–¥–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞
            resume_link: profileLink || '', // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
            has_resume: hasResumeFile || false, // –ï—Å—Ç—å –ª–∏ —Ä–µ–∑—é–º–µ
            source: 'webapp', // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
            completed_at: new Date().toISOString()
        };

        console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { user, preferences });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        const result = await saveUserPreferences(user.id, user, preferences);

        if (result) {
            res.json({
                success: true,
                message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
                preferences: preferences,
                user_id: user.id
            });
        } else {
            res.status(500).json({
                success: false,
                error: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É'
            });
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp:', error);
        res.status(500).json({
            success: false,
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * GET /api/survey/status/:userId
 */
router.get('/status/:userId', async (req, res) => {
    try {
        const { userId } = req.params;
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø—Ä–æ—Å–∞
        // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        
        res.json({
            success: true,
            hasCompletedSurvey: false, // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
            lastCompleted: null
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø—Ä–æ—Å–∞:', error);
        res.status(500).json({
            success: false,
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
});

export default router;
