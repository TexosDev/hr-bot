import 'dotenv/config';
import { google } from 'googleapis';
import { createSubscriptionsService, addSubscriptionToSheet } from './src/services/subscriptions.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API
const auth = new google.auth.JWT(
  process.env.GOOGLE_SERVICE_EMAIL,
  null,
  process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
  ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/spreadsheets']
);

const subscriptionsService = createSubscriptionsService(auth);
const RESPONSES_SHEET_ID = process.env.GOOGLE_RESPONSES_SHEET_ID || process.env.GOOGLE_SHEET_ID;

async function addTestSubscriptions() {
  try {
    console.log('üß™ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
    const testSubscriptions = [
      { userId: '123456789', username: 'test_user_1', category: 'IT/–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' },
      { userId: '987654321', username: 'test_user_2', category: 'IT/–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' },
      { userId: '123456789', username: 'test_user_1', category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' },
      { userId: '555666777', username: 'test_user_3', category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' }
    ];
    
    for (const subscription of testSubscriptions) {
      console.log(`üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É: ${subscription.username} -> ${subscription.category}`);
      
      const success = await addSubscriptionToSheet(subscriptionsService, RESPONSES_SHEET_ID, subscription);
      
      if (success) {
        console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ${subscription.username} -> ${subscription.category}`);
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ${subscription.username} -> ${subscription.category}`);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 500));
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫:', error);
  }
}

// –ó–∞–ø—É—Å–∫
addTestSubscriptions();
