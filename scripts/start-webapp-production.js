#!/usr/bin/env node

/**
 * Production WebApp —Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway
 * –†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç Telegram –±–æ—Ç–∞
 */

import 'dotenv/config';
import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import cors from 'cors';
import surveyApi from '../src/api/surveyApi.js';
import surveyQuestionsApi from '../src/api/surveyQuestionsApi.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const port = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`üì® ${req.method} ${req.path} - ${new Date().toISOString()}`);
  next();
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã WebApp
app.use('/webapp', express.static(path.join(__dirname, '../webapp')));

// API endpoints
app.use('/api/survey', surveyApi);
app.use('/api/questions', surveyQuestionsApi);

// Health check
app.get('/health', (req, res) => {
  res.json({
    status: 'healthy',
    timestamp: new Date().toISOString(),
    service: 'webapp-server',
    version: '1.0.0'
  });
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ webapp
app.get('/', (req, res) => {
  res.redirect('/webapp/index.html');
});

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API
app.get('/api', (req, res) => {
  res.json({
    message: 'WebApp API',
    endpoints: [
      'GET /webapp/index.html - WebApp –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
      'POST /api/survey/complete - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞',
      'GET /api/questions/categories - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤',
      'GET /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è'
    ]
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use((req, res) => {
  res.status(404).json({
    error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    path: req.path,
    availableEndpoints: [
      'GET /',
      'GET /webapp/index.html',
      'POST /api/survey/complete',
      'GET /api/questions/categories',
      'GET /health'
    ]
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
  res.status(500).json({
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
    message: err.message
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log('üöÄ WebApp Production —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì± –ü–æ—Ä—Ç: ${port}`);
  console.log(`üåê –ì–ª–∞–≤–Ω–∞—è: http://localhost:${port}/`);
  console.log(`üìã WebApp: http://localhost:${port}/webapp/index.html`);
  console.log(`‚ù§Ô∏è  Health: http://localhost:${port}/health`);
  console.log(`üîó API: http://localhost:${port}/api`);
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

