#!/usr/bin/env node

/**
 * –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫: Telegram –±–æ—Ç + Webhook —Å–µ—Ä–≤–µ—Ä
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å—é —Å–∏—Å—Ç–µ–º—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
 */

import 'dotenv/config';
import { Telegraf } from 'telegraf';
import { google } from 'googleapis';
import { createDriveService } from '../src/services/googleDrive.js';
import { createSheetsService } from '../src/services/googleSheets.js';
import { handleDocument } from '../src/handlers/document.js';
import { handleText } from '../src/handlers/text.js';
import { CommandManager } from '../src/commands/CommandManager.js';
import { ActionManager } from '../src/actions/ActionManager.js';
import { syncScheduler } from '../src/services/scheduler.js';
import { webhookService } from '../src/services/webhook.js';
import { telegramNotifications } from '../src/services/telegram-notifications.js';

console.log('\nüöÄ –ü–û–õ–ù–´–ô –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´\n');
console.log('=' .repeat(60));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n');

const requiredEnv = {
    'TELEGRAM_BOT_TOKEN': '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞',
    'SUPABASE_URL': 'URL Supabase',
    'SUPABASE_ANON_KEY': '–ö–ª—é—á Supabase'
};

let hasErrors = false;

for (const [key, description] of Object.entries(requiredEnv)) {
    if (!process.env[key]) {
        console.error(`‚ùå ${key} –Ω–µ –Ω–∞–π–¥–µ–Ω! (${description})`);
        hasErrors = true;
    } else {
        console.log(`‚úÖ ${key}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    }
}

if (hasErrors) {
    console.error('\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ .env —Ñ–∞–π–ª–µ');
    console.error('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run check-env\n');
    process.exit(1);
}

console.log('\n' + '='.repeat(60));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
console.log('\nüì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...\n');

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

bot.use((ctx, next) => {
    if (!ctx.session) {
        ctx.session = {};
    }
    return next();
});

// Google Services (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
let auth, driveService, sheetsService;
if (process.env.GOOGLE_SERVICE_EMAIL && process.env.GOOGLE_PRIVATE_KEY) {
    auth = new google.auth.JWT(
        process.env.GOOGLE_SERVICE_EMAIL,
        null,
        process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
        ['https://www.googleapis.com/auth/drive', 'https://www.googleapis.com/auth/spreadsheets']
    );
    driveService = createDriveService(auth);
    sheetsService = createSheetsService(auth);
    console.log('‚úÖ Google Services –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
} else {
    console.log('‚ö†Ô∏è  Google Services –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)');
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –∏ –¥–µ–π—Å—Ç–≤–∏–π
const commandManager = new CommandManager();
const actionManager = new ActionManager();
commandManager.registerAll(bot);
actionManager.registerAll(bot);

bot.on('document', handleDocument);
bot.on('text', handleText);

bot.catch((err, ctx) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

console.log('‚úÖ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
console.log('\nüîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...\n');

async function startAll() {
    try {
        // 1. –ó–∞–ø—É—Å–∫–∞–µ–º webhook —Å–µ—Ä–≤–µ—Ä
        console.log('1Ô∏è‚É£  –ó–∞–ø—É—Å–∫ Webhook —Å–µ—Ä–≤–µ—Ä–∞...');
        await webhookService.start();
        
        // 2. –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        console.log('2Ô∏è‚É£  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
        telegramNotifications.initialize();
        
        // 3. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        console.log('3Ô∏è‚É£  –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
        syncScheduler.start();
        
        // 4. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        console.log('4Ô∏è‚É£  –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
        await bot.launch();
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—Ç–µ
        telegramNotifications.notifyBotStart();
        
        console.log('\n' + '='.repeat(60));
        console.log('\n‚úÖ –í–°–Ø –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê!\n');
        console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:');
        console.log(`   ‚Ä¢ Telegram –±–æ—Ç: @${bot.botInfo?.username || '–±–æ—Ç'}`);
        console.log(`   ‚Ä¢ WebApp —Ñ–æ—Ä–º–∞: http://localhost:${process.env.WEBHOOK_PORT || 3001}/webapp/`);
        console.log(`   ‚Ä¢ API Health: http://localhost:${process.env.WEBHOOK_PORT || 3001}/health`);
        console.log('\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');
        console.log('='.repeat(60) + '\n');
        
    } catch (error) {
        console.error('\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã:', error);
        process.exit(1);
    }
}

// Graceful shutdown
async function shutdown() {
    console.log('\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...\n');
    
    try {
        console.log('1Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
        syncScheduler.stop();
        
        console.log('2Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞...');
        await webhookService.stop();
        
        console.log('3Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞...');
        bot.stop('SIGINT');
        
        console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n');
        process.exit(0);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ:', error);
        process.exit(1);
    }
}

process.once('SIGINT', shutdown);
process.once('SIGTERM', shutdown);

// –ó–∞–ø—É—Å–∫
startAll();

