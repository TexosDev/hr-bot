#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è WebApp
 * –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import cors from 'cors';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const port = process.env.WEBAPP_PORT || 3003;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`üì® ${req.method} ${req.path} - ${new Date().toISOString()}`);
  next();
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã WebApp
app.use('/webapp', express.static(path.join(__dirname, '../webapp')));

// API –¥–ª—è –æ–ø—Ä–æ—Å–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
app.post('/api/survey/complete', async (req, res) => {
  try {
    const { role, user, completed_at } = req.body;
    
    console.log('üìù –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å–∞:', {
      role,
      user: user ? `${user.first_name} ${user.last_name}` : 'Unknown',
      completed_at
    });
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    
    res.json({
      success: true,
      message: '–û–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω',
      data: {
        role,
        user_id: user?.id,
        completed_at
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø—Ä–æ—Å–∞:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
app.get('/health', (req, res) => {
  res.json({
    status: 'healthy',
    timestamp: new Date().toISOString(),
    service: 'webapp-server',
    version: '1.0.0'
  });
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.json({
    message: 'WebApp —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç',
    endpoints: [
      'GET /webapp/simple.html - WebApp –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
      'POST /api/survey/complete - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞',
      'GET /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è'
    ]
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
  res.status(500).json({
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
    message: err.message
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log('üöÄ WebApp —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì± WebApp –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/webapp/simple.html`);
  console.log(`üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/api/survey/complete`);
  console.log(`‚ù§Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è: http://localhost:${port}/health`);
  console.log('\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram:');
  console.log('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok: npm install -g ngrok');
  console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç—É–Ω–Ω–µ–ª—å: ngrok http 3002');
  console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTTPS URL –∏ –æ–±–Ω–æ–≤–∏—Ç–µ WEBAPP_URL –≤ .env');
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});
