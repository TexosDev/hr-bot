import 'dotenv/config';
import { google } from 'googleapis';
import { supabase } from '../src/services/supabase/supabase.js';
import { getVacanciesFromSheet } from '../src/services/vacancies.js';
import { getSubscriptionsFromSheet } from '../src/services/subscriptions.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API
const auth = new google.auth.JWT(
  process.env.GOOGLE_SERVICE_EMAIL,
  null,
  process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
  ['https://www.googleapis.com/auth/spreadsheets']
);

const sheetsService = google.sheets({ version: 'v4', auth });
const VACANCIES_SHEET_ID = process.env.GOOGLE_VACANCIES_SHEET_ID || process.env.GOOGLE_SHEET_ID;
const RESPONSES_SHEET_ID = process.env.GOOGLE_RESPONSES_SHEET_ID || process.env.GOOGLE_SHEET_ID;

console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets –≤ Supabase...');

async function migrateVacancies() {
  try {
    console.log('\n1. –ú–∏–≥—Ä–∞—Ü–∏—è –≤–∞–∫–∞–Ω—Å–∏–π...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–∑ Google Sheets
    const vacancies = await getVacanciesFromSheet(sheetsService, VACANCIES_SHEET_ID);
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${vacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π –≤ Google Sheets`);
    
    if (vacancies.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Supabase
    const supabaseVacancies = vacancies.map(vacancy => ({
      title: vacancy.title,
      description: vacancy.description,
      emoji: vacancy.emoji,
      category: vacancy.category,
      link: vacancy.link,
      level: vacancy.level,
      salary: vacancy.salary,
      requirements: vacancy.requirements,
      benefits: vacancy.benefits,
      is_active: true
    }));
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ Supabase
    const { data, error } = await supabase
      .from('vacancies')
      .insert(supabaseVacancies)
      .select();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π:', error);
      return;
    }
    
    console.log(`‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –≤–∞–∫–∞–Ω—Å–∏–π –≤ Supabase`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π:', error);
  }
}

async function migrateSubscriptions() {
  try {
    console.log('\n2. –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ Google Sheets
    const subscriptions = await getSubscriptionsFromSheet(sheetsService, RESPONSES_SHEET_ID);
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${subscriptions.length} –ø–æ–¥–ø–∏—Å–æ–∫ –≤ Google Sheets`);
    
    if (subscriptions.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Supabase
    const supabaseSubscriptions = subscriptions.map(subscription => ({
      user_id: parseInt(subscription.userId),
      username: subscription.username,
      category: subscription.category
    }));
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ Supabase
    const { data, error } = await supabase
      .from('subscriptions')
      .insert(supabaseSubscriptions)
      .select();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫:', error);
      return;
    }
    
    console.log(`‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –ø–æ–¥–ø–∏—Å–æ–∫ –≤ Supabase`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫:', error);
  }
}

async function migrateResponses() {
  try {
    console.log('\n3. –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª–∏–∫–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –∏–∑ Google Sheets
    const { data: responsesData, error } = await sheetsService.spreadsheets.values.get({
      spreadsheetId: RESPONSES_SHEET_ID,
      range: 'A:L'
    });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
      return;
    }
    
    const rows = responsesData.values || [];
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${rows.length - 1} –æ—Ç–∫–ª–∏–∫–æ–≤ –≤ Google Sheets`);
    
    if (rows.length <= 1) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –æ—Ç–∫–ª–∏–∫–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const responses = rows.slice(1).map(row => ({
      user_id: parseInt(row[1]) || 0,
      username: row[2] || '',
      first_name: row[3] || '',
      email: row[4] || '',
      phone: row[5] || '',
      file_name: row[6] || '',
      file_mime: row[7] || '',
      telegram_link: row[8] || '',
      status: row[9] || 'new',
      vacancy_title: row[10] || '',
      text_preview: row[11] || '',
      created_at: row[0] || new Date().toISOString()
    })).filter(r => r.user_id > 0);
    
    if (responses.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ Supabase
    const { data, error: insertError } = await supabase
      .from('responses')
      .insert(responses)
      .select();
    
    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –æ—Ç–∫–ª–∏–∫–æ–≤:', insertError);
      return;
    }
    
    console.log(`‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –æ—Ç–∫–ª–∏–∫–æ–≤ –≤ Supabase`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
  }
}

async function main() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...');
    const { data, error } = await supabase.from('vacancies').select('count').limit(1);
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ');
    
    // –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    await migrateVacancies();
    await migrateSubscriptions();
    await migrateResponses();
    
    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase –≤–º–µ—Å—Ç–æ Google Sheets');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  }
}

main();
