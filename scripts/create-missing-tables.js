import 'dotenv/config';
import { supabase } from '../src/services/supabase/supabase.js';

console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...');

async function createMissingTables() {
  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user_preferences
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_preferences...');
    
    const { error: userPrefsError } = await supabase
      .from('user_preferences')
      .select('*')
      .limit(1);
    
    if (userPrefsError && userPrefsError.message.includes('Could not find the table')) {
      console.log('üìã –¢–∞–±–ª–∏—Ü–∞ user_preferences –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...');
      
      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
      const { error: createError } = await supabase
        .rpc('create_user_preferences_table');
      
      if (createError) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ RPC, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±');
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_preferences —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É notifications
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã notifications...');
    
    const { error: notificationsError } = await supabase
      .from('notifications')
      .select('*')
      .limit(1);
    
    if (notificationsError && notificationsError.message.includes('Could not find the table')) {
      console.log('üìã –¢–∞–±–ª–∏—Ü–∞ notifications –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...');
      
      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
      const { error: createError } = await supabase
        .rpc('create_notifications_table');
      
      if (createError) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ RPC, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±');
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ notifications —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–∞–±–ª–∏—Ü:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
    console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ SQL –∑–∞–ø—Ä–æ—Å—ã:');
    console.log('');
    console.log('-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_preferences');
    console.log('CREATE TABLE IF NOT EXISTS user_preferences (');
    console.log('    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,');
    console.log('    user_id BIGINT NOT NULL UNIQUE,');
    console.log('    username VARCHAR(100),');
    console.log('    first_name VARCHAR(100),');
    console.log('    preferences JSONB NOT NULL DEFAULT \'{}\',');
    console.log('    is_active BOOLEAN DEFAULT true,');
    console.log('    subscription_type VARCHAR(50) DEFAULT \'survey_based\',');
    console.log('    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),');
    console.log('    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()');
    console.log(');');
    console.log('');
    console.log('-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã notifications');
    console.log('CREATE TABLE IF NOT EXISTS notifications (');
    console.log('    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,');
    console.log('    user_id BIGINT NOT NULL,');
    console.log('    vacancy_id UUID REFERENCES vacancies(id) ON DELETE CASCADE,');
    console.log('    status VARCHAR(20) DEFAULT \'sent\',');
    console.log('    sent_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),');
    console.log('    delivered_at TIMESTAMP WITH TIME ZONE,');
    console.log('    error_message TEXT');
    console.log(');');
    console.log('');
    console.log('-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤');
    console.log('CREATE INDEX IF NOT EXISTS idx_user_preferences_user ON user_preferences(user_id);');
    console.log('CREATE INDEX IF NOT EXISTS idx_user_preferences_active ON user_preferences(is_active);');
    console.log('CREATE INDEX IF NOT EXISTS idx_notifications_user ON notifications(user_id);');
    console.log('CREATE INDEX IF NOT EXISTS idx_notifications_vacancy ON notifications(vacancy_id);');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü:', error);
  }
}

createMissingTables();
