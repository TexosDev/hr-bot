#!/usr/bin/env node

/**
 * –°–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –±–æ—Ç–∞ –∏ WebApp
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç-—Å–µ—Ä–≤–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π WebApp
 */

import { WebhookService } from '../src/services/webhook.js';

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–∞...\n');

const webhookService = new WebhookService();

webhookService.start()
    .then(() => {
        console.log('\n‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
        console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3001/webapp/');
        console.log('   2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É');
        console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ Supabase\n');
        console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');
    })
    .catch(error => {
        console.error('\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
        
        if (error.code === 'EADDRINUSE') {
            console.error('\nüí° –†–µ—à–µ–Ω–∏—è:');
            console.error('   1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É 3001');
            console.error('   2. –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç –≤ .env: WEBHOOK_PORT=3002\n');
        } else {
            console.error('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
            console.error('   1. –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω');
            console.error('   2. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SUPABASE_URL –∏ SUPABASE_ANON_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
            console.error('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run check-env\n');
        }
        
        process.exit(1);
    });

// Graceful shutdown
process.on('SIGINT', async () => {
    console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');
    await webhookService.stop();
    process.exit(0);
});

process.on('SIGTERM', async () => {
    console.log('\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');
    await webhookService.stop();
    process.exit(0);
});
