#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü survey_categories –∏ survey_fields –≤ Supabase
 */

import { supabase } from '../src/services/supabase/supabase.js';
import dotenv from 'dotenv';

dotenv.config();

const colors = {
    green: '\x1b[32m',
    red: '\x1b[31m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
    reset: '\x1b[0m'
};

function success(message) {
    console.log(`${colors.green}‚úÖ ${message}${colors.reset}`);
}

function error(message) {
    console.log(`${colors.red}‚ùå ${message}${colors.reset}`);
}

function info(message) {
    console.log(`${colors.blue}‚ÑπÔ∏è  ${message}${colors.reset}`);
}

async function createTables() {
    console.log('\n' + '='.repeat(60));
    console.log('üèóÔ∏è  –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ –î–õ–Ø –í–û–ü–†–û–°–û–í –û–ü–†–û–°–ê');
    console.log('='.repeat(60) + '\n');

    // SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    const createCategoriesSQL = `
        CREATE TABLE IF NOT EXISTS survey_categories (
            id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
            category_key VARCHAR(100) NOT NULL UNIQUE,
            name VARCHAR(255) NOT NULL,
            description TEXT,
            icon VARCHAR(50),
            is_active BOOLEAN DEFAULT true,
            display_order INTEGER DEFAULT 0,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
    `;

    const createFieldsSQL = `
        CREATE TABLE IF NOT EXISTS survey_fields (
            id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
            category_key VARCHAR(100),
            field_key VARCHAR(100) NOT NULL,
            field_type VARCHAR(50) NOT NULL,
            label VARCHAR(255) NOT NULL,
            placeholder TEXT,
            options JSONB,
            is_required BOOLEAN DEFAULT false,
            is_common BOOLEAN DEFAULT false,
            display_order INTEGER DEFAULT 0,
            validation_rules JSONB,
            is_active BOOLEAN DEFAULT true,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            UNIQUE(category_key, field_key)
        );
    `;

    const createIndexesSQL = `
        CREATE INDEX IF NOT EXISTS idx_survey_categories_key ON survey_categories(category_key);
        CREATE INDEX IF NOT EXISTS idx_survey_categories_active ON survey_categories(is_active);
        CREATE INDEX IF NOT EXISTS idx_survey_categories_order ON survey_categories(display_order);
        CREATE INDEX IF NOT EXISTS idx_survey_fields_category ON survey_fields(category_key);
        CREATE INDEX IF NOT EXISTS idx_survey_fields_common ON survey_fields(is_common);
        CREATE INDEX IF NOT EXISTS idx_survey_fields_active ON survey_fields(is_active);
        CREATE INDEX IF NOT EXISTS idx_survey_fields_order ON survey_fields(display_order);
    `;

    try {
        console.log('1Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã survey_categories...');
        const { error: error1 } = await supabase.rpc('exec_sql', { sql: createCategoriesSQL });
        
        if (error1) {
            // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ PostgREST
            info('–ò—Å–ø–æ–ª—å–∑—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã...');
            info('–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase SQL Editor:');
            console.log('\n' + createCategoriesSQL + '\n');
        } else {
            success('–¢–∞–±–ª–∏—Ü–∞ survey_categories —Å–æ–∑–¥–∞–Ω–∞');
        }

        console.log('\n2Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã survey_fields...');
        const { error: error2 } = await supabase.rpc('exec_sql', { sql: createFieldsSQL });
        
        if (error2) {
            info('–ò—Å–ø–æ–ª—å–∑—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã...');
            info('–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase SQL Editor:');
            console.log('\n' + createFieldsSQL + '\n');
        } else {
            success('–¢–∞–±–ª–∏—Ü–∞ survey_fields —Å–æ–∑–¥–∞–Ω–∞');
        }

        console.log('\n3Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');
        const { error: error3 } = await supabase.rpc('exec_sql', { sql: createIndexesSQL });
        
        if (error3) {
            info('–ò–Ω–¥–µ–∫—Å—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–≥–æ SQL —Å–∫—Ä–∏–ø—Ç–∞');
        } else {
            success('–ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');
        }

        console.log('\n' + '='.repeat(60));
        error('‚ö†Ô∏è  Supabase –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ API');
        console.log('='.repeat(60) + '\n');

        console.log('üìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ Supabase SQL Editor:\n');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://app.supabase.com');
        console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç');
        console.log('3. SQL Editor ‚Üí New Query');
        console.log('4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–µ—Å—å –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞:');
        console.log(`   ${colors.yellow}database/survey-questions-schema.sql${colors.reset}`);
        console.log('5. –ù–∞–∂–º–∏—Ç–µ Run\n');

        console.log('üí° –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
        console.log(`   ${colors.green}npm run populate-questions${colors.reset} - –∑–∞–ø–æ–ª–Ω–∏—Ç—å Google –¢–∞–±–ª–∏—Ü—É`);
        console.log(`   ${colors.green}npm run sync-questions${colors.reset} - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤ Supabase\n`);

    } catch (err) {
        console.error('\n‚ùå –û—à–∏–±–∫–∞:', err.message);
        
        console.log('\nüìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase:\n');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard ‚Üí SQL Editor');
        console.log('2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: database/survey-questions-schema.sql');
        console.log('3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor');
        console.log('4. –ù–∞–∂–º–∏—Ç–µ Run\n');
    }
}

createTables();

