import 'dotenv/config';
import { supabase } from './src/services/supabase.js';

console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ Supabase...');

async function createVacanciesTable() {
  try {
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã vacancies...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    const { data: tables, error: tablesError } = await supabase
      .from('information_schema.tables')
      .select('table_name')
      .eq('table_name', 'vacancies');
    
    if (tablesError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã');
      return false;
    }
    
    if (tables && tables.length > 0) {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ vacancies —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return true;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ SQL Editor (–Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—Ä—É—á–Ω—É—é)
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ vacancies –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    console.log('üí° –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ SQL Editor –≤ Supabase');
    return false;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã vacancies:', error);
    return false;
  }
}

async function insertTestData() {
  try {
    console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
    const testVacancies = [
      {
        title: 'Frontend Developer',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
        emoji: 'üíª',
        category: 'IT/–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        level: 'Middle',
        salary: '150-200k',
        requirements: 'React, Vue, JavaScript',
        benefits: '–£–¥–∞–ª–µ–Ω–∫–∞, –≥–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫'
      },
      {
        title: 'Backend Developer',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏',
        emoji: '‚öôÔ∏è',
        category: 'IT/–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        level: 'Senior',
        salary: '200-300k',
        requirements: 'Node.js, Python, PostgreSQL',
        benefits: '–°–ø–æ—Ä—Ç–∑–∞–ª, –º–µ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞'
      },
      {
        title: 'UI/UX Designer',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
        emoji: 'üé®',
        category: '–î–∏–∑–∞–π–Ω',
        level: 'Middle',
        salary: '120-180k',
        requirements: 'Figma, Adobe XD, Sketch',
        benefits: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'
      }
    ];
    
    const { data, error } = await supabase
      .from('vacancies')
      .insert(testVacancies)
      .select();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
      return false;
    }
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${data.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π`);
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }
}

async function main() {
  try {
    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase...');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    const tablesExist = await createVacanciesTable();
    if (!tablesExist) {
      console.log('\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–∞–±–ª–∏—Ü:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å Supabase');
      console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
      console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ supabase-schema.sql');
      console.log('4. –í—Å—Ç–∞–≤—å—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL');
      console.log('5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞');
      return;
    }
    
    // 2. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testDataAdded = await insertTestData();
    if (!testDataAdded) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
      return;
    }
    
    console.log('\nüéâ Supabase –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase:', error);
  }
}

main();
