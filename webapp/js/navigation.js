/**
 * –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º —Ñ–æ—Ä–º—ã
 * @module navigation
 */

import { appState } from './state.js';
import { validateForm, clearValidationErrors, resetFieldStyles } from './validation.js';
import { updateStepDisplay, showLoading } from './ui.js';

/**
 * –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
 */
export function nextStep() {
    const state = appState.getState();

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
    if (!validateForm()) {
        return;
    }

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    clearValidationErrors();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ –æ—à–∏–±–æ–∫
    resetFieldStyles();

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    if (state.currentStep < state.totalSteps) {
        appState.nextStep();
        updateStepDisplay();

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É —Ñ–æ—Ä–º—ã
        window.scrollTo({ top: 0, behavior: 'smooth' });
    } else {
        // –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submitForm();
    }
}

/**
 * –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
 */
export function prevStep() {
    const state = appState.getState();

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    clearValidationErrors();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ –æ—à–∏–±–æ–∫
    resetFieldStyles();

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
    if (state.currentStep > 1) {
        appState.prevStep();
        updateStepDisplay();

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É —Ñ–æ—Ä–º—ã
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
}

/**
 * –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —à–∞–≥—É
 * @param {number} step - –ù–æ–º–µ—Ä —à–∞–≥–∞
 */
export function goToStep(step) {
    const state = appState.getState();

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    clearValidationErrors();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ –æ—à–∏–±–æ–∫
    resetFieldStyles();

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —à–∞–≥—É
    if (step >= 1 && step <= state.totalSteps) {
        appState.goToStep(step);
        updateStepDisplay();

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É —Ñ–æ—Ä–º—ã
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
 */
export function updateStep() {
    updateStepDisplay();

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    syncFormDataWithInputs();
}

/**
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞
 */
export function syncFormDataWithInputs() {
    const state = appState.getState();
    const formData = state.formData;

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    Object.entries(formData).forEach(([field, value]) => {
        const input = document.getElementById(field);
        if (input && input.type !== 'file') {
            input.value = value;
        }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º dropdown'—ã
    if (formData.workFormat) {
        const workFormatText = document.getElementById('workFormatText');
        if (workFormatText) {
            workFormatText.textContent = formData.workFormat;
        }
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É
 */
export async function submitForm() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã...');

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º showSuccess
    const { showSuccess, showError: showErrorUI } = await import('./ui.js');

    const state = appState.getState();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
    if (!validateForm()) {
        console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    if (!navigator.onLine) {
        showErrorUI('‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        console.warn('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    showLoading(true);
    appState.setLoading(true);

    console.log('‚è≥ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏');

    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        const formData = appState.getFormDataForSubmit();

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
        if (state.uploadedFile) {
            formData.resumeFile = state.uploadedFile;
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', formData);
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        const baseUrl = window.location.origin;
        const apiUrl = `${baseUrl}/api/survey/complete`;

        console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞:', apiUrl);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å timeout
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 —Å–µ–∫—É–Ω–¥ timeout

        //  –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –î–æ–±–∞–≤–ª—è–µ–º Telegram initData –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const headers = {
            'Content-Type': 'application/json',
        };
        
        // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ Telegram WebApp API –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData) {
            headers['x-telegram-init-data'] = window.Telegram.WebApp.initData;
            console.log('üîê –î–æ–±–∞–≤–ª–µ–Ω Telegram auth header –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
        }

        const response = await fetch(apiUrl, {
            method: 'POST',
            headers,
            body: JSON.stringify(formData),
            signal: controller.signal
        });

        clearTimeout(timeoutId);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
        if (!response.ok) {
            if (response.status === 400) {
                throw new Error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π');
            }
            if (response.status === 500) {
                throw new Error('–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É');
            }
            if (response.status === 503) {
                throw new Error('–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            }
            throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–∫–æ–¥ ${response.status})`);
        }

        const result = await response.json();
        console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ localStorage –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º
        localStorage.setItem('lastSubmission', JSON.stringify({
            formData,
            timestamp: new Date().toISOString(),
            success: true
        }));

        // –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        appState.reset();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        showSuccess('‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.');

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            returnToBot();
        }, 2000);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
        const formData = appState.getFormDataForSubmit();
        localStorage.setItem('lastSubmission', JSON.stringify({
            formData,
            timestamp: new Date().toISOString(),
            error: error.message
        }));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–Ω—è—Ç–Ω—É—é –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (error.name === 'AbortError') {
            showErrorUI('‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        } else {
            showErrorUI(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    } finally {
        // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        console.log('üîÑ –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏');
        showLoading(false);
        appState.setLoading(false);
    }
}

/**
 * –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram –±–æ—Ç–∞
 */
export function returnToBot() {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp –µ—Å–ª–∏ –º—ã –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp) {
        window.Telegram.WebApp.close();
    } else {
        // –ï—Å–ª–∏ –Ω–µ –≤ Telegram, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        alert('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π.');
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
export function initNavigation() {
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
    appState.subscribe((state) => {
        if (state.currentStep !== undefined) {
            updateStepDisplay();
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateStep();
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
export function handleKeyboardNavigation() {
    document.addEventListener('keydown', (e) => {
        const state = appState.getState();

        // Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ)
        if (e.key === 'Enter' && !e.shiftKey && state.currentStep < state.totalSteps) {
            e.preventDefault();
            nextStep();
        }

        // Shift + Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
        if (e.key === 'Enter' && e.shiftKey && state.currentStep > 1) {
            e.preventDefault();
            prevStep();
        }

        // Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è dropdown'–æ–≤
        if (e.key === 'Escape') {
            // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–∫—Ä—ã—Ç–∏—è dropdown'–æ–≤
            import('./ui.js').then(({ closeAllDropdowns }) => {
                closeAllDropdowns();
            });
        }
    });
}

/**
 * –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */
export function addProgressIndicators() {
    const progressContainer = document.querySelector('.progress-indicators');
    if (!progressContainer) return;

    const state = appState.getState();

    progressContainer.innerHTML = '';

    for (let i = 1; i <= state.totalSteps; i++) {
        const indicator = document.createElement('div');
        indicator.className = `step-indicator ${i === state.currentStep ? 'active' : ''}`;
        indicator.onclick = () => goToStep(i);

        const circle = document.createElement('div');
        circle.className = 'step-circle';
        circle.textContent = i;

        indicator.appendChild(circle);
        progressContainer.appendChild(indicator);
    }
}

/**
 * –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
 */
export function animateStepTransition() {
    const currentStepElement = document.querySelector('.step:not([style*="display: none"])');
    if (currentStepElement) {
        currentStepElement.style.opacity = '0';
        currentStepElement.style.transform = 'translateY(20px)';

        setTimeout(() => {
            currentStepElement.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
            currentStepElement.style.opacity = '1';
            currentStepElement.style.transform = 'translateY(0)';
        }, 50);
    }
}
